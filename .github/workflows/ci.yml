# Automatic comments are generally kept since they are explaining the workflow.

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    permissions:
      id-token: write # required to use OIDC authentication
      contents: read # required to checkout the code from the repo

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a single command using the runners shell
      - name: Run starter line
        run: echo Build process starting...
    
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Get required Go modules
        run:  cd go && go mod download
        
      - name: Build
        run:  cd go && go build -v ./...
        
      - name: Run vet
        run: cd go && go vet .

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.47.1
          working-directory: go
          skip-cache: true
          skip-pkg-cache: true
          skip-build-cache: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_ARN }}
          role-duration-seconds: 120
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Run tests
        run:  cd go && go test -v ./...
